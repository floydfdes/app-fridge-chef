{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useState } from 'react';\nimport { baseFontSize, colors, useAppFonts } from \"../shared/fonts\";\nimport recipesData from \"../shared/recipes.json\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar categories = [{\n  id: '1',\n  name: 'Breakfast',\n  key: 'breakfast'\n}, {\n  id: '2',\n  name: 'Lunch',\n  key: 'lunch'\n}, {\n  id: '3',\n  name: 'Dinner',\n  key: 'dinner'\n}, {\n  id: '4',\n  name: 'Desserts',\n  key: 'desserts'\n}, {\n  id: '5',\n  name: 'Vegetarian',\n  key: 'vegetarian'\n}, {\n  id: '6',\n  name: 'Quick & Easy',\n  key: 'quickAndEasy'\n}];\nvar Explore = function Explore() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedCategory = _useState2[0],\n    setSelectedCategory = _useState2[1];\n  var loaded = useAppFonts();\n  if (!loaded) {\n    return null;\n  }\n  var renderCategory = function renderCategory(_ref) {\n    var item = _ref.item;\n    return _jsx(TouchableOpacity, {\n      style: styles.categoryItem,\n      onPress: function onPress() {\n        return setSelectedCategory(item.key);\n      },\n      children: _jsx(Text, {\n        style: styles.categoryText,\n        children: item.name\n      })\n    });\n  };\n  var renderRecipe = function renderRecipe(_ref2) {\n    var item = _ref2.item;\n    return _jsxs(View, {\n      style: styles.recipeCard,\n      children: [_jsx(Image, {\n        source: {\n          uri: item.imageUrl\n        },\n        style: styles.recipeImage\n      }), _jsxs(View, {\n        style: styles.recipeInfo,\n        children: [_jsx(Text, {\n          style: styles.recipeName,\n          children: item.name\n        }), _jsx(Text, {\n          style: styles.recipeCuisine,\n          children: item.cuisine\n        }), _jsx(View, {\n          style: styles.ratingContainer,\n          children: _jsx(Text, {\n            style: styles.ratingText,\n            children: item.rating\n          })\n        })]\n      })]\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Explore Recipes\"\n    }), !selectedCategory ? _jsx(FlatList, {\n      data: categories,\n      renderItem: renderCategory,\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      },\n      numColumns: 2\n    }) : _jsxs(_Fragment, {\n      children: [_jsx(TouchableOpacity, {\n        style: styles.backButton,\n        onPress: function onPress() {\n          return setSelectedCategory(null);\n        },\n        children: _jsx(Text, {\n          style: styles.backButtonText,\n          children: \"Back to Categories\"\n        })\n      }), _jsx(FlatList, {\n        data: recipesData[selectedCategory],\n        renderItem: renderRecipe,\n        keyExtractor: function keyExtractor(item) {\n          return item.id.toString();\n        }\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    backgroundColor: colors.background\n  },\n  title: {\n    fontFamily: 'PoppinsBold',\n    fontSize: baseFontSize * 1.5,\n    color: colors.text,\n    marginBottom: 20\n  },\n  categoryItem: {\n    flex: 1,\n    margin: 10,\n    height: 100,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: colors.third,\n    borderRadius: 10,\n    elevation: 3,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 2\n  },\n  categoryText: {\n    fontFamily: 'Poppins',\n    fontSize: baseFontSize,\n    color: colors.text\n  },\n  backButton: {\n    backgroundColor: colors.secondary,\n    padding: 10,\n    borderRadius: 5,\n    marginBottom: 10\n  },\n  backButtonText: {\n    fontFamily: 'Poppins',\n    color: colors.background,\n    textAlign: 'center'\n  },\n  recipeCard: {\n    flexDirection: 'row',\n    backgroundColor: colors.third,\n    borderRadius: 10,\n    marginBottom: 15,\n    overflow: 'hidden'\n  },\n  recipeImage: {\n    width: 100,\n    height: 100\n  },\n  recipeInfo: {\n    flex: 1,\n    padding: 10\n  },\n  recipeName: {\n    fontFamily: 'Poppins',\n    fontSize: baseFontSize,\n    color: colors.text\n  },\n  recipeCuisine: {\n    fontFamily: 'PoppinsLight',\n    fontSize: baseFontSize * 0.8,\n    color: colors.textLight\n  },\n  ratingContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginTop: 5\n  },\n  ratingText: {\n    fontFamily: 'Poppins',\n    fontSize: baseFontSize * 0.8,\n    color: colors.text\n  }\n});\nexport default Explore;","map":{"version":3,"names":["React","useState","baseFontSize","colors","useAppFonts","recipesData","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","categories","id","name","key","Explore","_useState","_useState2","_slicedToArray","selectedCategory","setSelectedCategory","loaded","renderCategory","_ref","item","TouchableOpacity","style","styles","categoryItem","onPress","children","Text","categoryText","renderRecipe","_ref2","View","recipeCard","Image","source","uri","imageUrl","recipeImage","recipeInfo","recipeName","recipeCuisine","cuisine","ratingContainer","ratingText","rating","container","title","FlatList","data","renderItem","keyExtractor","numColumns","backButton","backButtonText","toString","StyleSheet","create","flex","padding","backgroundColor","background","fontFamily","fontSize","color","text","marginBottom","margin","height","justifyContent","alignItems","third","borderRadius","elevation","shadowColor","shadowOffset","width","shadowOpacity","shadowRadius","secondary","textAlign","flexDirection","overflow","textLight","marginTop"],"sources":["/Users/floydfernandes/Public/00_Projects/00_Apps/app-fridge-chef-2/screens/explorer.js"],"sourcesContent":["import { FlatList, Image, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport React, { useState } from 'react';\nimport { baseFontSize, colors, useAppFonts } from '../shared/fonts';\n\nimport recipesData from '../shared/recipes.json';\n\nconst categories = [\n    { id: '1', name: 'Breakfast', key: 'breakfast' },\n    { id: '2', name: 'Lunch', key: 'lunch' },\n    { id: '3', name: 'Dinner', key: 'dinner' },\n    { id: '4', name: 'Desserts', key: 'desserts' },\n    { id: '5', name: 'Vegetarian', key: 'vegetarian' },\n    { id: '6', name: 'Quick & Easy', key: 'quickAndEasy' },\n];\n\nconst Explore = () => {\n    const [selectedCategory, setSelectedCategory] = useState(null);\n    const loaded = useAppFonts();\n\n    if (!loaded) {\n        return null;\n    }\n\n    const renderCategory = ({ item }) => (\n        <TouchableOpacity\n            style={styles.categoryItem}\n            onPress={() => setSelectedCategory(item.key)}\n        >\n            <Text style={styles.categoryText}>{item.name}</Text>\n        </TouchableOpacity>\n    );\n\n    const renderRecipe = ({ item }) => (\n        <View style={styles.recipeCard}>\n            <Image source={{ uri: item.imageUrl }} style={styles.recipeImage} />\n            <View style={styles.recipeInfo}>\n                <Text style={styles.recipeName}>{item.name}</Text>\n                <Text style={styles.recipeCuisine}>{item.cuisine}</Text>\n                <View style={styles.ratingContainer}>\n                    <Text style={styles.ratingText}>{item.rating}</Text>\n                </View>\n            </View>\n        </View>\n    );\n\n    return (\n        <View style={styles.container}>\n            <Text style={styles.title}>Explore Recipes</Text>\n            {!selectedCategory ? (\n                <FlatList\n                    data={categories}\n                    renderItem={renderCategory}\n                    keyExtractor={item => item.id}\n                    numColumns={2}\n                />\n            ) : (\n                <>\n                    <TouchableOpacity\n                        style={styles.backButton}\n                        onPress={() => setSelectedCategory(null)}\n                    >\n                        <Text style={styles.backButtonText}>Back to Categories</Text>\n                    </TouchableOpacity>\n                    <FlatList\n                        data={recipesData[selectedCategory]}\n                        renderItem={renderRecipe}\n                        keyExtractor={item => item.id.toString()}\n                    />\n                </>\n            )}\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        padding: 20,\n        backgroundColor: colors.background,\n    },\n    title: {\n        fontFamily: 'PoppinsBold',\n        fontSize: baseFontSize * 1.5,\n        color: colors.text,\n        marginBottom: 20,\n    },\n    categoryItem: {\n        flex: 1,\n        margin: 10,\n        height: 100,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: colors.third,\n        borderRadius: 10,\n        elevation: 3,\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 2 },\n        shadowOpacity: 0.1,\n        shadowRadius: 2,\n    },\n    categoryText: {\n        fontFamily: 'Poppins',\n        fontSize: baseFontSize,\n        color: colors.text,\n    },\n    backButton: {\n        backgroundColor: colors.secondary,\n        padding: 10,\n        borderRadius: 5,\n        marginBottom: 10,\n    },\n    backButtonText: {\n        fontFamily: 'Poppins',\n        color: colors.background,\n        textAlign: 'center',\n    },\n    recipeCard: {\n        flexDirection: 'row',\n        backgroundColor: colors.third,\n        borderRadius: 10,\n        marginBottom: 15,\n        overflow: 'hidden',\n    },\n    recipeImage: {\n        width: 100,\n        height: 100,\n    },\n    recipeInfo: {\n        flex: 1,\n        padding: 10,\n    },\n    recipeName: {\n        fontFamily: 'Poppins',\n        fontSize: baseFontSize,\n        color: colors.text,\n    },\n    recipeCuisine: {\n        fontFamily: 'PoppinsLight',\n        fontSize: baseFontSize * 0.8,\n        color: colors.textLight,\n    },\n    ratingContainer: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginTop: 5,\n    },\n    ratingText: {\n        fontFamily: 'Poppins',\n        fontSize: baseFontSize * 0.8,\n        color: colors.text,\n    },\n});\n\nexport default Explore;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}